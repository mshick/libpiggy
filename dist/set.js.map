{"version":3,"sources":["../src/set.js"],"names":["set","client","table","key","val","q","value","results","query","error"],"mappings":";;;;;;;;;;AAAA;;;;;;AAEA,MAAMA;AAAA,6CAAM,WAAgB,EAACC,MAAD,EAASC,KAAT,EAAgBC,GAAhB,EAAqBC,GAArB,EAAhB,EAA2C;AACrD,QAAI;AACF,YAAMC,IAAI,kCAAmB,EAACF,GAAD,EAAMG,OAAOF,GAAb,EAAkBF,KAAlB,EAAnB,CAAV;AACA,YAAMK,UAAU,MAAMN,OAAOO,KAAP,CAAaH,CAAb,CAAtB;;AAEA,aAAO;AACLJ,cADK;AAELM,eAFK;AAGLJ,WAHK;AAILC;AAJK,OAAP;AAMD,KAVD,CAUE,OAAOK,KAAP,EAAc;AACd,aAAO;AACLR,cADK;AAELQ;AAFK,OAAP;AAID;AACF,GAjBK;;AAAA;AAAA;AAAA;AAAA,IAAN;;kBAmBeT,G","file":"set.js","sourcesContent":["import buildStoreSetQuery from './build-store-set-query';\n\nconst set = async function ({client, table, key, val}) {\n  try {\n    const q = buildStoreSetQuery({key, value: val, table});\n    const results = await client.query(q);\n\n    return {\n      client,\n      results,\n      key,\n      val\n    };\n  } catch (error) {\n    return {\n      client,\n      error\n    };\n  }\n};\n\nexport default set;\n"]}