{"version":3,"sources":["../src/create-store-indexes.js"],"names":["createIndexes","client","table","indexes","text","length","forEach","index","fail","jsonPath","resolve","query","then","results"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;AAEA,MAAMA,gBAAgB,UAAU,EAACC,MAAD,EAASC,KAAT,EAAgBC,OAAhB,EAAV,EAAoC;AACxD,MAAIC,OAAO,EAAX;;AAEA,MAAID,WAAWA,QAAQE,MAAvB,EAA+B;AAC7BF,YAAQG,OAAR,CAAgBC,SAAS;AACvB,UAAIA,UAAU,KAAV,IAAmBA,UAAU,KAAjC,EAAwC;AACtC,yBAAOC,IAAP,CAAY,KAAZ,EAAoB,uCAApB;AACD;;AAED,UAAIC,QAAJ;;AAEA,UAAI,uBAAQF,KAAR,KAAkBA,MAAM,CAAN,MAAa,KAAnC,EAA0C;AACxCE,mBAAY,eAAcF,MAAM,CAAN,CAAS,eAAnC;AACD,OAFD,MAEO;AACLE,mBAAY,cAAaF,KAAM,KAA/B;AACD;;AAEDH,cAAS;sCACuBF,KAAM,IAAGK,KAAM,cAAaL,KAAM,IAAGO,QAAS;OAD9E;AAGD,KAhBD;AAiBD;;AAED,MAAI,CAACL,IAAL,EAAW;AACT,WAAO,kBAAQM,OAAR,CAAgB,EAACT,MAAD,EAAhB,CAAP;AACD;;AAED,SAAOA,OAAOU,KAAP,CAAa,EAACP,IAAD,EAAb,EACJQ,IADI,CACCC,WAAW;AACf,WAAO;AACLZ,YADK;AAELY;AAFK,KAAP;AAID,GANI,CAAP;AAOD,CAlCD;;kBAoCeb,a","file":"create-store-indexes.js","sourcesContent":["import assert from 'assert';\nimport isArray from 'lodash/isArray';\n\nconst createIndexes = function ({client, table, indexes}) {\n  let text = '';\n\n  if (indexes && indexes.length) {\n    indexes.forEach(index => {\n      if (index === 'key' || index === 'val') {\n        assert.fail(false, `'key' and 'val' are not valid indexes`);\n      }\n\n      let jsonPath;\n\n      if (isArray(index) && index[1] === 'int') {\n        jsonPath = `(((val ->> '${index[0]}')::integer))`;\n      } else {\n        jsonPath = `((val ->> '${index}'))`;\n      }\n\n      text += `\n        CREATE INDEX IF NOT EXISTS \"${table}_${index}_index\" ON ${table} ${jsonPath};\n      `;\n    });\n  }\n\n  if (!text) {\n    return Promise.resolve({client});\n  }\n\n  return client.query({text})\n    .then(results => {\n      return {\n        client,\n        results\n      };\n    });\n};\n\nexport default createIndexes;\n"]}