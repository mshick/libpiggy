{"version":3,"sources":["../src/watch-table.js"],"names":["watchTable","client","table","watcher","state","_openClients","push","on","channel","payload","parsed","parse"],"mappings":";;;;;;AAAA;;;;;;AAEA,MAAMA,aAAa,UAAU,EAACC,MAAD,EAASC,KAAT,EAAgBC,OAAhB,EAAV,EAAoC,EAACC,KAAD,EAApC,EAA6C;AAC9D,QAAM,EAACC,YAAD,KAAiBD,KAAvB;;AAEAC,eAAaC,IAAb,CAAkBL,MAAlB;;AAEAA,SAAOM,EAAP,CAAU,cAAV,EAA0B,CAAC,EAACC,OAAD,EAAUC,OAAV,EAAD,KAAwB;AAChD,UAAMC,SAAS,aAAGC,KAAH,CAASF,OAAT,CAAf;AACA,QAAIC,OAAOR,KAAP,KAAiBA,KAArB,EAA4B;AAC1BC,cAAQ,EAACF,MAAD,EAASO,OAAT,EAAkBC,OAAlB,EAA2BC,MAA3B,EAAR;AACD;AACF,GALD;AAMD,CAXD;;kBAaeV,U","file":"watch-table.js","sourcesContent":["import qs from 'qs';\n\nconst watchTable = function ({client, table, watcher}, {state}) {\n  const {_openClients} = state;\n\n  _openClients.push(client);\n\n  client.on('notification', ({channel, payload}) => {\n    const parsed = qs.parse(payload);\n    if (parsed.table === table) {\n      watcher({client, channel, payload, parsed});\n    }\n  });\n};\n\nexport default watchTable;\n"]}