{"version":3,"sources":["../src/get.js"],"names":["getQueryText","table","key","text","keys","wheres","map","k","v","join","get","client","results","query","val","rows","error"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;AAEA,MAAMA,eAAe,UAAU,EAACC,KAAD,EAAQC,GAAR,EAAV,EAAwB;AAC3C,MAAIC,IAAJ;;AAEA,MAAI,wBAASD,GAAT,CAAJ,EAAmB;AACjB,UAAME,OAAO,oBAAYF,GAAZ,CAAb;AACA,UAAMG,SAASD,KAAKE,GAAL,CAASC,KAAK;AAC3B,YAAMC,IAAIN,IAAIK,CAAJ,CAAV;AACA,UAAI,wBAASC,CAAT,CAAJ,EAAiB;AACf,eAAQ,aAAYD,CAAE,cAAaC,CAAE,GAArC;AACD;AACD,aAAQ,YAAWD,CAAE,QAAOC,CAAE,GAA9B;AACD,KANc,CAAf;AAOAL,WAAQ,iBAAgBF,KAAM,UAASI,OAAOI,IAAP,CAAY,OAAZ,CAAqB,GAA5D;AACD,GAVD,MAUO;AACLN,WAAQ,iBAAgBF,KAAM,iBAAgBC,GAAI,IAAlD;AACD;;AAED,SAAOC,IAAP;AACD,CAlBD;;AAoBA,MAAMO;AAAA,6CAAM,WAAgB,EAACC,MAAD,EAASV,KAAT,EAAgBC,GAAhB,EAAhB,EAAsC;AAChD,QAAI;AACF,YAAMC,OAAOH,aAAa,EAACC,KAAD,EAAQC,GAAR,EAAb,CAAb;AACA,YAAMU,UAAU,MAAMD,OAAOE,KAAP,CAAa,EAACV,IAAD,EAAb,CAAtB;AACA,YAAM,EAACW,GAAD,KAAQF,QAAQG,IAAR,CAAa,CAAb,IAAkBH,QAAQG,IAAR,CAAa,CAAb,CAAlB,GAAoC,EAAlD;;AAEA,aAAO;AACLJ,cADK;AAELC,eAFK;AAGLV,WAHK;AAILY;AAJK,OAAP;AAMD,KAXD,CAWE,OAAOE,KAAP,EAAc;AACd,aAAO;AACLL,cADK;AAELK;AAFK,OAAP;AAID;AACF,GAlBK;;AAAA;AAAA;AAAA;AAAA,IAAN;;kBAoBeN,G","file":"get.js","sourcesContent":["import isObject from 'lodash/isObject';\nimport isNumber from 'lodash/isNumber';\n\nconst getQueryText = function ({table, key}) {\n  let text;\n\n  if (isObject(key)) {\n    const keys = Object.keys(key);\n    const wheres = keys.map(k => {\n      const v = key[k];\n      if (isNumber(v)) {\n        return `(val ->> '${k}')::int = '${v}'`;\n      }\n      return `val ->> '${k}' = '${v}'`;\n    });\n    text = `SELECT * FROM ${table} WHERE ${wheres.join(' AND ')};`;\n  } else {\n    text = `SELECT * FROM ${table} WHERE key = '${key}';`;\n  }\n\n  return text;\n};\n\nconst get = async function ({client, table, key}) {\n  try {\n    const text = getQueryText({table, key});\n    const results = await client.query({text});\n    const {val} = results.rows[0] ? results.rows[0] : {};\n\n    return {\n      client,\n      results,\n      key,\n      val\n    };\n  } catch (error) {\n    return {\n      client,\n      error\n    };\n  }\n};\n\nexport default get;\n"]}